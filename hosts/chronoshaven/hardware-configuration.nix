# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
    ./nvidia.nix
    ../../third-party/staypls.nix
  ];

  boot.initrd.availableKernelModules = ["xhci_pci" "ahci" "usb_storage" "sd_mod" "rtsx_usb_sdmmc"];
  boot.initrd.kernelModules = [];
  boot.initrd.systemd.tpm2.enable = true;
  security.tpm2.enable = true;
  boot.kernelModules = ["kvm-intel"];
  boot.extraModulePackages = [];

  staypls = {
    enable = true;
    dirs = [
      "/etc/nixos"
      "/etc/ssh"
      "/etc/NetworkManager"
      "/var/log"
      "/var/lib"
      "/usr/systemd-placeholder"
    ];
  };

  boot.initrd.luks.devices = {
    nix = {
      device = "/dev/disk/by-label/NIXROOT";
      # fallbackToPassword = true;
    };
    home = {
      device = "/dev/disk/by-label/NIXHOME";
      # fallbackToPassword = true;
    };
    workspace = {
      device = "/dev/disk/by-label/WORKSPACE";
      # fallbackToPassword = true;
    };
    cryolite = {
      device = "/dev/disk/by-label/CRYOLITE";
      # fallbackToPassword = true;
    };
  };

  fileSystems."/" = {
    device = "none";
    fsType = "tmpfs";
    options = ["size=512M" "mode=755"];
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-label/EFI";
    fsType = "vfat";
    options = ["fmask=0077" "dmask=0077"];
  };

  fileSystems."/nix" = {
    neededForBoot = true;
    device = "/dev/mapper/nix";
    fsType = "btrfs";
    options = ["noatime" "discard" "subvol=@nix" "compress=zstd" "x-gvfs-hide"];
  };

  fileSystems."/persist" = {
    neededForBoot = true;
    device = "/dev/mapper/nix";
    fsType = "btrfs";
    options = ["noatime" "discard" "subvol=@persist" "compress=zstd" "x-gvfs-hide"];
  };

  fileSystems."/tmp" = {
    device = "/dev/mapper/nix";
    fsType = "btrfs";
    options = ["noatime" "discard" "subvol=@tmp" "x-gvfs-hide"];
  };

  fileSystems."/home" = {
    neededForBoot = true;
    device = "/dev/mapper/home";
    fsType = "btrfs";
    options = ["noatime" "discard" "subvol=@home" "compress=zstd" "x-gvfs-hide"];
  };

  fileSystems."/etc/cryolite" = {
    device = "/dev/mapper/cryolite";
    fsType = "ext4";
    options = ["noatime" "x-gvfs-hide"];
  };

  fileSystems."/usr" = {
    device = "/persist/usr";
    fsType = "none";
    options = ["bind" "X-fstrim.notrim" "x-gvfs-hide"];
  };

  swapDevices = [
    {
      device = "/dev/disk/by-uuid/f326bebf-4ecc-4b36-a050-3ed1e4786078";
    }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp2s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp3s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
