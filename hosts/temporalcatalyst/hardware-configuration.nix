# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
# I don't care Nix, I edited it manually anyway :3
{
  config,
  lib,
  modulesPath,
  pkgs,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["nvme" "xhci_pci" "ahci" "usb_storage" "usbhid" "sd_mod"];
  boot.blacklistedKernelModules = ["k10temp"];
  # boot.initrd.kernelModules = ["amdgpu"]; # This broke everything
  boot.kernelModules = ["kvm-amd" "zenpower"];
  boot.extraModulePackages = [config.boot.kernelPackages.zenpower];
  boot.kernelParams = [
    "amd_pstate=active"
  ];

  # hardware.amdgpu.initrd.enable = lib.mkDefault true;
  hardware.graphics = {
    enable = lib.mkDefault true;
    enable32Bit = lib.mkDefault true;
    extraPackages = [pkgs.amdvlk pkgs.rocmPackages.clr.icd];
  };

  environment.variables = {
    ROC_ENABLE_PRE_VEGA = "1";
  };

  services.xserver.videoDrivers = lib.mkDefault ["modesetting"];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/a697a731-988f-4958-8cb2-bb8e50926d18";
    fsType = "btrfs";
    options = ["subvol=@"];
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/0122-6AA3";
    fsType = "vfat";
    options = ["fmask=0077" "dmask=0077"];
  };

  # Lemme mount the disks!!
  fileSystems."/mnt/nvme2" = {
    device = "/dev/disk/by-uuid/01DAC34DFF7B26D0";
    fsType = "ntfs3";
    # NTFS, thanks for being the worst filesystem!!
    options = ["nofail" "fmask=0077" "dmask=0077"];
  };

  fileSystems."/mnt/workspace" = {
    device = "/dev/disk/by-uuid/f6302143-2559-4e77-abc7-0a57d942d2dc";
    fsType = "btrfs";
  };

  fileSystems."/var/lib/docker/btrfs" = {
    device = "/@/var/lib/docker/btrfs";
    fsType = "none";
    options = ["bind"];
  };

  fileSystems."/bin" = {
    device = "/usr/bin";
    fsType = "none";
    options = ["bind"];
  };

  swapDevices = [
    {device = "/dev/disk/by-uuid/6582ff75-54fb-418b-8847-8b7177c3035f";}
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp5s0.useDHCP = lib.mkDefault true;

  powerManagement.cpuFreqGovernor = "performance";
  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
